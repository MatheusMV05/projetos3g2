openapi: 3.0.0
info:
  title: Site Institucional - Brasfi API
  version: v0.0.1-SNAPSHOT
  description: API para o site institucional da Brasfi, permitindo gerenciamento de conteúdo, comunicação, métricas de impacto, e funcionalidades administrativas.
  contact:
    name: Equipe de Desenvolvimento G2 - Cesar School
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080/api
    description: Servidor de Desenvolvimento Local
  - url: https://{seu-app-name}.azurewebsites.net/api
    description: Servidor de Produção (Exemplo Azure)

tags:
  - name: Autenticação
    description: Endpoints para registro, login e verificação MFA de usuários.
  - name: Páginas
    description: Gerenciamento de páginas de conteúdo do site.
  - name: Informações Institucionais
    description: Gerenciamento de informações estáticas institucionais (ex Missão, Visão).
  - name: Contato
    description: Endpoints para formulário de contato e gerenciamento de mensagens.
  - name: Newsletter
    description: Gerenciamento de assinantes e envio de newsletters.
  - name: Métricas de Impacto
    description: Gerenciamento e visualização de métricas de impacto da organização.
  - name: Depoimentos
    description: Gerenciamento e visualização de depoimentos.
  - name: Relatórios
    description: Geração de relatórios em PDF.
  - name: Notificações
    description: Gerenciamento de notificações para usuários administrativos.
  - name: Auditoria
    description: Visualização de logs de auditoria do sistema.
  - name: Backup
    description: Operações de backup e restauração de dados do sistema.
  - name: Agendamento de Publicações
    description: Gerenciamento de publicações de conteúdo agendadas.
  - name: Analytics
    description: Endpoints para registrar e consultar eventos de analytics.

paths:
  /auth/register:
    post:
      tags:
        - Autenticação
      summary: Registra um novo usuário administrativo.
      description: Cria um novo usuário com perfil ADMIN. MFA pode ser ativado durante o registro.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          description: Usuário registrado com sucesso. Retorna token JWT e, se MFA ativado, o segredo MFA.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
        '400':
          description: Requisição inválida (ex email já existe, senha fraca).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Perfil ADMIN não encontrado no sistema.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/authenticate:
    post:
      tags:
        - Autenticação
      summary: Autentica um usuário.
      description: Autentica um usuário com email e senha. Se MFA estiver ativo, um passo adicional de verificação será necessário.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
      responses:
        '200':
          description: Autenticação bem-sucedida. Retorna token JWT ou indica necessidade de verificação MFA.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
        '401':
          description: Credenciais inválidas.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Usuário não encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/mfa/verify:
    post:
      tags:
        - Autenticação
      summary: Verifica o código MFA.
      description: Verifica o código MFA fornecido pelo usuário para completar a autenticação.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MfaVerificationRequest'
      responses:
        '200':
          description: Verificação MFA bem-sucedida. Retorna token JWT.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
        '400':
          description: Código MFA inválido.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Usuário não encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /paginas:
    get:
      tags:
        - Páginas
      summary: Lista todas as páginas.
      description: Retorna uma lista de todas as páginas de conteúdo.
      responses:
        '200':
          description: Lista de páginas recuperada com sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pagina'
    post:
      tags:
        - Páginas
      summary: Cria uma nova página.
      description: Cria uma nova página de conteúdo. Requer autenticação de ADMIN.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaginaDTO'
      responses:
        '201':
          description: Página criada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pagina'
        '400':
          description: Requisição inválida (ex campos obrigatórios faltando).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.

  /paginas/{id}:
    get:
      tags:
        - Páginas
      summary: Busca uma página por ID.
      description: Retorna os detalhes de uma página específica pelo seu ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID da página
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Página recuperada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pagina'
        '404':
          description: Página não encontrada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Páginas
      summary: Atualiza uma página existente.
      description: Atualiza os dados de uma página existente. Requer autenticação de ADMIN.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID da página a ser atualizada
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaginaDTO'
      responses:
        '200':
          description: Página atualizada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pagina'
        '400':
          description: Requisição inválida.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '404':
          description: Página não encontrada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Páginas
      summary: Exclui uma página.
      description: Exclui uma página existente. Requer autenticação de ADMIN.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID da página a ser excluída
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Página excluída com sucesso.
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '404':
          description: Página não encontrada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /paginas/slug/{slug}:
    get:
      tags:
        - Páginas
      summary: Busca uma página por slug.
      description: Retorna os detalhes de uma página específica pelo seu slug.
      parameters:
        - name: slug
          in: path
          required: true
          description: Slug da página
          schema:
            type: string
      responses:
        '200':
          description: Página recuperada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pagina'
        '404':
          description: Página não encontrada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /public/institucionais/{chave}:
    get:
      tags:
        - Informações Institucionais
      summary: Busca uma informação institucional por chave.
      parameters:
        - name: chave
          in: path
          required: true
          description: Chave da informação institucional (ex 'missao', 'visao').
          schema:
            type: string
      responses:
        '200':
          description: Informação recuperada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformacaoInstitucional'
        '404':
          description: Informação não encontrada.

  /public/institucionais:
    get:
      tags:
        - Informações Institucionais
      summary: Lista todas as informações institucionais ativas.
      responses:
        '200':
          description: Lista de informações recuperada com sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InformacaoInstitucional'

  /public/institucionais/tipo/{tipo}:
    get:
      tags:
        - Informações Institucionais
      summary: Lista informações institucionais ativas por tipo.
      parameters:
        - name: tipo
          in: path
          required: true
          description: Tipo da informação (ex 'TEXTO', 'HTML').
          schema:
            type: string
      responses:
        '200':
          description: Lista de informações recuperada com sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InformacaoInstitucional'

  /public/institucionais/mapa:
    get:
      tags:
        - Informações Institucionais
      summary: Lista informações institucionais ativas como um mapa (chave-valor).
      responses:
        '200':
          description: Mapa de informações recuperado com sucesso.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string

  /public/institucionais/mapa/tipo/{tipo}:
    get:
      tags:
        - Informações Institucionais
      summary: Lista informações institucionais ativas de um tipo específico como mapa.
      parameters:
        - name: tipo
          in: path
          required: true
          description: Tipo da informação.
          schema:
            type: string
      responses:
        '200':
          description: Mapa de informações recuperado com sucesso.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string

  /admin/institucionais:
    get:
      tags:
        - Informações Institucionais
      summary: (Admin) Lista todas as informações institucionais (ativas e inativas).
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InformacaoInstitucional'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
    post:
      tags:
        - Informações Institucionais
      summary: (Admin) Cria uma nova informação institucional.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InformacaoInstitucionalDTO'
      responses:
        '201':
          description: Criado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformacaoInstitucional'
        '400':
          description: Requisição inválida.
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.

  /admin/institucionais/{id}:
    put:
      tags:
        - Informações Institucionais
      summary: (Admin) Atualiza uma informação institucional.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InformacaoInstitucionalDTO'
      responses:
        '200':
          description: Atualizado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformacaoInstitucional'
        '400':
          description: Requisição inválida.
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '404':
          description: Não encontrado.
    delete:
      tags:
        - Informações Institucionais
      summary: (Admin) Exclui uma informação institucional.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Excluído com sucesso.
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '404':
          description: Não encontrado.

  /admin/institucionais/{id}/ativar:
    patch:
      tags:
        - Informações Institucionais
      summary: (Admin) Ativa uma informação institucional.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Ativado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformacaoInstitucional'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '404':
          description: Não encontrado.

  /admin/institucionais/{id}/desativar:
    patch:
      tags:
        - Informações Institucionais
      summary: (Admin) Desativa uma informação institucional.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Desativado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformacaoInstitucional'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '404':
          description: Não encontrado.

  /public/contato:
    post:
      tags:
        - Contato
      summary: Envia uma mensagem de contato.
      description: Permite que visitantes enviem mensagens através do formulário de contato. Inclui validação reCAPTCHA.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MensagemDTO'
      responses:
        '201':
          description: Mensagem enviada com sucesso.
        '400':
          description: Requisição inválida ou falha na verificação reCAPTCHA.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/contato:
    get:
      tags:
        - Contato
      summary: (Admin) Lista mensagens de contato.
      description: Retorna uma lista paginada de mensagens de contato, com filtros opcionais.
      security:
        - bearerAuth: []
      parameters:
        - name: lida
          in: query
          schema:
            type: boolean
          description: Filtrar por mensagens lidas/não lidas.
        - name: respondida
          in: query
          schema:
            type: boolean
          description: Filtrar por mensagens respondidas/não respondidas.
        - name: inicio
          in: query
          schema:
            type: string
            format: date-time
          description: Data de início do filtro.
        - name: fim
          in: query
          schema:
            type: string
            format: date-time
          description: Data de fim do filtro.
        - $ref: '#/components/parameters/PageablePage'
        - $ref: '#/components/parameters/PageableSize'
        - $ref: '#/components/parameters/PageableSort'
      responses:
        '200':
          description: Lista de mensagens recuperada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageMensagem'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.

  /admin/contato/{id}:
    get:
      tags:
        - Contato
      summary: (Admin) Busca uma mensagem de contato por ID.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Mensagem recuperada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mensagem'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '404':
          description: Mensagem não encontrada.

  /admin/contato/{id}/marcar-lida:
    patch:
      tags:
        - Contato
      summary: (Admin) Marca uma mensagem como lida.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Mensagem marcada como lida.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mensagem'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '404':
          description: Mensagem não encontrada.

  /admin/contato/{id}/responder:
    post:
      tags:
        - Contato
      summary: (Admin) Responde a uma mensagem de contato.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RespostaContatoDTO'
      responses:
        '200':
          description: Resposta enviada e mensagem atualizada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mensagem'
        '400':
          description: Requisição inválida.
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '404':
          description: Mensagem não encontrada.

  /public/newsletter/inscrever:
    post:
      tags:
        - Newsletter
      summary: Inscreve um email na newsletter.
      description: Permite que visitantes se inscrevam na newsletter. Inclui validação reCAPTCHA.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssinanteDTO'
      responses:
        '201':
          description: Inscrição realizada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assinante'
        '400':
          description: Requisição inválida, email já inscrito ou falha no reCAPTCHA.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /public/newsletter/cancelar:
    delete:
      tags:
        - Newsletter
      summary: Cancela a inscrição de um email na newsletter.
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
            format: email
          description: Email para cancelar inscrição.
      responses:
        '204':
          description: Inscrição cancelada com sucesso.
        '404':
          description: Email não encontrado na lista de assinantes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/newsletter/assinantes:
    get:
      tags:
        - Newsletter
      summary: (Admin) Lista assinantes da newsletter.
      security:
        - bearerAuth: []
      parameters:
        - name: ativo
          in: query
          schema:
            type: boolean
          description: Filtrar por assinantes ativos/inativos.
        - $ref: '#/components/parameters/PageablePage'
        - $ref: '#/components/parameters/PageableSize'
        - $ref: '#/components/parameters/PageableSort'
      responses:
        '200':
          description: Lista de assinantes recuperada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAssinante'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.

  /admin/newsletter:
    get:
      tags:
        - Newsletter
      summary: (Admin) Lista newsletters criadas.
      security:
        - bearerAuth: []
      parameters:
        - name: enviada
          in: query
          schema:
            type: boolean
          description: Filtrar por newsletters enviadas/não enviadas.
        - name: usuarioId
          in: query
          schema:
            type: integer
            format: int64
          description: Filtrar por ID do usuário que criou a newsletter.
        - $ref: '#/components/parameters/PageablePage'
        - $ref: '#/components/parameters/PageableSize'
        - $ref: '#/components/parameters/PageableSort'
      responses:
        '200':
          description: Lista de newsletters recuperada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageNewsletter'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
    post:
      tags:
        - Newsletter
      summary: (Admin) Cria uma nova newsletter.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewsletterDTO'
      responses:
        '201':
          description: Newsletter criada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Newsletter'
        '400':
          description: Requisição inválida.
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.

  /admin/newsletter/{id}:
    get:
      tags:
        - Newsletter
      summary: (Admin) Busca uma newsletter por ID.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Newsletter recuperada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Newsletter'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '404':
          description: Newsletter não encontrada.

  /admin/newsletter/{id}/enviar:
    post:
      tags:
        - Newsletter
      summary: (Admin) Envia uma newsletter existente para os assinantes ativos.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Newsletter enviada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Newsletter'
        '400':
          description: Requisição inválida (ex newsletter já enviada, sem assinantes).
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '404':
          description: Newsletter não encontrada.

  /public/metricas:
    get:
      tags:
        - Métricas de Impacto
      summary: Lista todas as métricas de impacto ativas.
      responses:
        '200':
          description: Lista de métricas recuperada com sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetricaImpacto'

  /public/metricas/ano/{ano}:
    get:
      tags:
        - Métricas de Impacto
      summary: Lista métricas de impacto ativas por ano.
      parameters:
        - name: ano
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetricaImpacto'

  /public/metricas/categoria/{categoria}:
    get:
      tags:
        - Métricas de Impacto
      summary: Lista métricas de impacto ativas por categoria.
      parameters:
        - name: categoria
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetricaImpacto'

  /public/metricas/agrupadas/categoria:
    get:
      tags:
        - Métricas de Impacto
      summary: Lista métricas ativas agrupadas por categoria, opcionalmente filtradas por ano.
      parameters:
        - name: ano
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/MetricaImpacto'

  /public/metricas/agrupadas/ano:
    get:
      tags:
        - Métricas de Impacto
      summary: Lista métricas ativas agrupadas por ano, opcionalmente filtradas por categoria.
      parameters:
        - name: categoria
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/MetricaImpacto'

  /public/metricas/anos:
    get:
      tags:
        - Métricas de Impacto
      summary: Lista os anos disponíveis com métricas ativas.
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer

  /public/metricas/categorias:
    get:
      tags:
        - Métricas de Impacto
      summary: Lista as categorias disponíveis com métricas ativas.
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string

  /admin/metricas:
    get:
      tags:
        - Métricas de Impacto
      summary: (Admin) Busca métricas com filtros e paginação.
      security:
        - bearerAuth: []
      parameters:
        - name: ano
          in: query
          schema:
            type: integer
        - name: categoria
          in: query
          schema:
            type: string
        - name: tipoIniciativa
          in: query
          schema:
            type: string
        - name: ativo
          in: query
          schema:
            type: boolean
        - $ref: '#/components/parameters/PageablePage'
        - $ref: '#/components/parameters/PageableSize'
        - $ref: '#/components/parameters/PageableSort'
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageMetricaImpacto'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
    post:
      tags:
        - Métricas de Impacto
      summary: (Admin) Cria uma nova métrica de impacto.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricaImpactoDTO'
      responses:
        '201':
          description: Criado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricaImpacto'
        '400':
          description: Requisição inválida.
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.

  /admin/metricas/{id}:
    get:
      tags:
        - Métricas de Impacto
      summary: (Admin) Busca uma métrica de impacto por ID.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricaImpacto'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '404':
          description: Não encontrado.
    put:
      tags:
        - Métricas de Impacto
      summary: (Admin) Atualiza uma métrica de impacto.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricaImpactoDTO'
      responses:
        '200':
          description: Atualizado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricaImpacto'
        '400':
          description: Requisição inválida.
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '404':
          description: Não encontrado.
    delete:
      tags:
        - Métricas de Impacto
      summary: (Admin) Exclui (soft delete) uma métrica de impacto.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Excluído com sucesso.
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '404':
          description: Não encontrado.

  /admin/metricas/{id}/ativar:
    patch:
      tags:
        - Métricas de Impacto
      summary: (Admin) Ativa uma métrica de impacto.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricaImpacto'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '404':
          description: Não encontrado.

  /admin/metricas/{id}/desativar:
    patch:
      tags:
        - Métricas de Impacto
      summary: (Admin) Desativa uma métrica de impacto.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricaImpacto'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '404':
          description: Não encontrado.

  /admin/metricas/{id}/historico:
    get:
      tags:
        - Métricas de Impacto
      summary: (Admin) Busca o histórico de alterações de uma métrica.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - $ref: '#/components/parameters/PageablePage'
        - $ref: '#/components/parameters/PageableSize'
        - $ref: '#/components/parameters/PageableSort'
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageHistoricoMetrica'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '404':
          description: Métrica não encontrada.

  /public/depoimentos:
    get:
      tags:
        - Depoimentos
      summary: Lista todos os depoimentos ativos.
      responses:
        '200':
          description: Lista de depoimentos recuperada com sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Depoimento'

  /public/depoimentos/destaques:
    get:
      tags:
        - Depoimentos
      summary: Lista depoimentos ativos marcados como destaque.
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Depoimento'

  /public/depoimentos/ano/{ano}:
    get:
      tags:
        - Depoimentos
      summary: Lista depoimentos ativos por ano.
      parameters:
        - name: ano
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Depoimento'

  /public/depoimentos/organizacao/{organizacao}:
    get:
      tags:
        - Depoimentos
      summary: Lista depoimentos ativos por organização.
      parameters:
        - name: organizacao
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Depoimento'

  /public/depoimentos/anos:
    get:
      tags:
        - Depoimentos
      summary: Lista os anos disponíveis com depoimentos ativos.
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer

  /admin/depoimentos:
    get:
      tags:
        - Depoimentos
      summary: (Admin) Busca depoimentos com filtros e paginação.
      security:
        - bearerAuth: []
      parameters:
        - name: ano
          in: query
          schema:
            type: integer
        - name: organizacao
          in: query
          schema:
            type: string
        - name: destaque
          in: query
          schema:
            type: boolean
        - name: ativo
          in: query
          schema:
            type: boolean
        - $ref: '#/components/parameters/PageablePage'
        - $ref: '#/components/parameters/PageableSize'
        - $ref: '#/components/parameters/PageableSort'
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageDepoimento'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
    post:
      tags:
        - Depoimentos
      summary: (Admin) Cria um novo depoimento.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepoimentoDTO'
      responses:
        '201':
          description: Criado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Depoimento'
        '400':
          description: Requisição inválida.
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.

  /admin/depoimentos/{id}:
    get:
      tags:
        - Depoimentos
      summary: (Admin) Busca um depoimento por ID.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Depoimento'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '404':
          description: Não encontrado.
    put:
      tags:
        - Depoimentos
      summary: (Admin) Atualiza um depoimento.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepoimentoDTO'
      responses:
        '200':
          description: Atualizado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Depoimento'
        '400':
          description: Requisição inválida.
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '404':
          description: Não encontrado.
    delete:
      tags:
        - Depoimentos
      summary: (Admin) Exclui (soft delete) um depoimento.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Excluído com sucesso.
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '404':
          description: Não encontrado.

  /admin/depoimentos/{id}/ativar:
    patch:
      tags:
        - Depoimentos
      summary: (Admin) Ativa um depoimento.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Depoimento'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '404':
          description: Não encontrado.

  /admin/depoimentos/{id}/desativar:
    patch:
      tags:
        - Depoimentos
      summary: (Admin) Desativa um depoimento.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Depoimento'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '404':
          description: Não encontrado.

  /admin/depoimentos/{id}/destaque:
    patch:
      tags:
        - Depoimentos
      summary: (Admin) Altera o status de destaque de um depoimento.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: destaque
          in: query
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Depoimento'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '404':
          description: Não encontrado.

  /admin/relatorios/impacto/pdf:
    get:
      tags:
        - Relatórios
      summary: (Admin) Gera um relatório de impacto em PDF.
      security:
        - bearerAuth: []
      parameters:
        - name: ano
          in: query
          schema:
            type: integer
          description: Ano para filtrar as métricas (opcional).
        - name: categoria
          in: query
          schema:
            type: string
          description: Categoria para filtrar as métricas (opcional).
        - name: incluirDepoimentos
          in: query
          schema:
            type: boolean
            default: true
          description: Incluir depoimentos no relatório.
      responses:
        '200':
          description: Relatório PDF gerado com sucesso.
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '500':
          description: Erro ao gerar relatório.

  /admin/notificacoes:
    get:
      tags:
        - Notificações
      summary: (Admin) Lista notificações do usuário logado.
      security:
        - bearerAuth: []
      parameters:
        - name: lida
          in: query
          schema:
            type: boolean
        - name: tipo
          in: query
          schema:
            type: string
            enum: [INFO, WARNING, ERROR]
        - name: inicio
          in: query
          schema:
            type: string
            format: date-time
        - name: fim
          in: query
          schema:
            type: string
            format: date-time
        - $ref: '#/components/parameters/PageablePage'
        - $ref: '#/components/parameters/PageableSize'
        - $ref: '#/components/parameters/PageableSort'
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageNotificacaoDTO'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.

  /admin/notificacoes/nao-lidas:
    get:
      tags:
        - Notificações
      summary: (Admin) Lista as últimas 5 notificações não lidas do usuário.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificacaoDTO'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.

  /admin/notificacoes/contador:
    get:
      tags:
        - Notificações
      summary: (Admin) Conta o número de notificações não lidas do usuário.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.

  /admin/notificacoes/{id}/marcar-lida:
    patch:
      tags:
        - Notificações
      summary: (Admin) Marca uma notificação específica como lida.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificacaoDTO'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '404':
          description: Notificação não encontrada.

  /admin/notificacoes/marcar-todas-lidas:
    patch:
      tags:
        - Notificações
      summary: (Admin) Marca todas as notificações do usuário como lidas.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Sucesso.
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.

  /admin/notificacoes/{id}:
    delete:
      tags:
        - Notificações
      summary: (Admin) Exclui uma notificação específica do usuário.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Excluído com sucesso.
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '404':
          description: Notificação não encontrada.

  /admin/auditoria:
    get:
      tags:
        - Auditoria
      summary: (Admin) Lista logs de auditoria com filtros.
      security:
        - bearerAuth: []
      parameters:
        - name: usuarioId
          in: query
          schema:
            type: integer
            format: int64
        - name: entidade
          in: query
          schema:
            type: string
        - name: acao
          in: query
          schema:
            type: string
        - name: inicio
          in: query
          schema:
            type: string
            format: date-time
        - name: fim
          in: query
          schema:
            type: string
            format: date-time
        - $ref: '#/components/parameters/PageablePage'
        - $ref: '#/components/parameters/PageableSize'
        - $ref: '#/components/parameters/PageableSort'
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageLogAuditoriaDTO'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.

  /admin/auditoria/ultimas-atividades:
    get:
      tags:
        - Auditoria
      summary: (Admin) Lista as últimas atividades de auditoria.
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
        - $ref: '#/components/parameters/PageablePage'
        - $ref: '#/components/parameters/PageableSize'
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageLogAuditoriaDTO'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.

  /admin/auditoria/por-usuario:
    get:
      tags:
        - Auditoria
      summary: (Admin) Lista logs de auditoria para um usuário específico.
      security:
        - bearerAuth: []
      parameters:
        - name: usuarioId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - $ref: '#/components/parameters/PageablePage'
        - $ref: '#/components/parameters/PageableSize'
        - $ref: '#/components/parameters/PageableSort'
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageLogAuditoriaDTO'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.

  /admin/backup:
    post:
      tags:
        - Backup
      summary: (Admin) Realiza um backup manual do sistema.
      security:
        - bearerAuth: []
      parameters:
        - name: tipo
          in: query
          schema:
            type: string
            default: manual
            enum: [manual, diario, semanal]
          description: Tipo de backup a ser realizado.
      responses:
        '200':
          description: Backup realizado com sucesso.
          content:
            application/json:
              schema:
                type: string
                example: "Backup realizado com sucesso ./backups/manual_backup_20250523_010000.json"
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '500':
          description: Erro ao realizar backup.
    get:
      tags:
        - Backup
      summary: (Admin) Lista os arquivos de backup disponíveis.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de backups recuperada com sucesso.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: "manual_backup_20250523_010000.json"
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '500':
          description: Erro ao listar backups.

  /admin/backup/{nomeArquivo}:
    get:
      tags:
        - Backup
      summary: (Admin) Baixa um arquivo de backup específico.
      security:
        - bearerAuth: []
      parameters:
        - name: nomeArquivo
          in: path
          required: true
          schema:
            type: string
          description: Nome do arquivo de backup a ser baixado.
      responses:
        '200':
          description: Conteúdo do backup.
          content:
            application/json:
              schema:
                type: string
                format: binary
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '404':
          description: Arquivo de backup não encontrado.
        '500':
          description: Erro ao obter conteúdo do backup.

  /admin/agendamentos:
    post:
      tags:
        - Agendamento de Publicações
      summary: (Admin) Agenda uma nova publicação de conteúdo.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicacaoAgendadaDTO'
      responses:
        '201':
          description: Publicação agendada com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicacaoAgendada'
        '400':
          description: Requisição inválida.
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
    get:
      tags:
        - Agendamento de Publicações
      summary: (Admin) Lista publicações agendadas com filtros.
      security:
        - bearerAuth: []
      parameters:
        - name: tipoConteudo
          in: query
          schema:
            type: string
        - name: publicado
          in: query
          schema:
            type: boolean
        - name: usuarioId
          in: query
          schema:
            type: integer
            format: int64
        - name: dataInicio
          in: query
          schema:
            type: string
            format: date-time
        - name: dataFim
          in: query
          schema:
            type: string
            format: date-time
        - $ref: '#/components/parameters/PageablePage'
        - $ref: '#/components/parameters/PageableSize'
        - $ref: '#/components/parameters/PageableSort'
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagePublicacaoAgendada'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.

  /admin/agendamentos/{id}:
    get:
      tags:
        - Agendamento de Publicações
      summary: (Admin) Busca uma publicação agendada por ID.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicacaoAgendada'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '404':
          description: Não encontrado.
    put:
      tags:
        - Agendamento de Publicações
      summary: (Admin) Atualiza uma publicação agendada.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicacaoAgendadaDTO'
      responses:
        '200':
          description: Atualizado com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicacaoAgendada'
        '400':
          description: Requisição inválida.
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '404':
          description: Não encontrado.
    delete:
      tags:
        - Agendamento de Publicações
      summary: (Admin) Exclui uma publicação agendada.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Excluído com sucesso.
        '400':
          description: Não pode excluir publicação já processada.
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.
        '404':
          description: Não encontrado.

  /public/analytics/evento:
    post:
      tags:
        - Analytics
      summary: Registra um evento de analytics.
      description: Endpoint público para o frontend registrar eventos de analytics (ex pageview, cliques).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventoAnalyticsDTO'
      responses:
        '200':
          description: Evento registrado com sucesso.
        '400':
          description: Requisição inválida.

  /admin/analytics/estatisticas:
    get:
      tags:
        - Analytics
      summary: (Admin) Obtém estatísticas de analytics.
      security:
        - bearerAuth: []
      parameters:
        - name: inicio
          in: query
          schema:
            type: string
            format: date-time
          description: Data/hora de início do período (opcional).
        - name: fim
          in: query
          schema:
            type: string
            format: date-time
          description: Data/hora de fim do período (opcional).
      responses:
        '200':
          description: Estatísticas recuperadas com sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstatisticasDTO'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.

  /admin/analytics/estatisticas/diarias:
    get:
      tags:
        - Analytics
      summary: (Admin) Obtém estatísticas de analytics diárias.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstatisticasDTO'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.

  /admin/analytics/estatisticas/semanais:
    get:
      tags:
        - Analytics
      summary: (Admin) Obtém estatísticas de analytics semanais.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstatisticasDTO'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.

  /admin/analytics/estatisticas/mensais:
    get:
      tags:
        - Analytics
      summary: (Admin) Obtém estatísticas de analytics mensais.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Sucesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstatisticasDTO'
        '401':
          description: Não autorizado.
        '403':
          description: Acesso proibido.

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    PageablePage:
      name: page
      in: query
      description: Número da página (0-indexed).
      required: false
      schema:
        type: integer
        default: 0
    PageableSize:
      name: size
      in: query
      description: Tamanho da página.
      required: false
      schema:
        type: integer
        default: 20
    PageableSort:
      name: sort
      in: query
      description: Critério de ordenação (ex 'nome,asc', 'dataCriacao,desc').
      required: false
      schema:
        type: array
        items:
          type: string
  schemas:
    RegisterRequest:
      type: object
      required:
        - nome
        - email
        - senha
      properties:
        nome:
          type: string
          example: "Administrador"
        email:
          type: string
          format: email
          example: "admin@brasfi.com.br"
        senha:
          type: string
          format: password
          minLength: 6
          example: "senha123"
        mfaAtivado:
          type: boolean
          default: false
          description: Indica se a autenticação de múltiplos fatores (MFA) deve ser ativada para este usuário.

    AuthenticationRequest:
      type: object
      required:
        - email
        - senha
      properties:
        email:
          type: string
          format: email
          example: "admin@brasfi.com.br"
        senha:
          type: string
          format: password
          example: "senha123"

    MfaVerificationRequest:
      type: object
      required:
        - email
        - code
      properties:
        email:
          type: string
          format: email
          example: "admin@brasfi.com.br"
        code:
          type: integer
          description: "Código de 6 dígitos do aplicativo autenticador."
          example: 123456

    AuthenticationResponse:
      type: object
      properties:
        token:
          type: string
          description: Token JWT para autenticação. Nulo se MFA for requerido.
          example: "eyJhbGciOiJIUzI1NiJ9..."
        requiresMfa:
          type: boolean
          description: Indica se a verificação MFA é necessária.
        mfaSecret:
          type: string
          description: Segredo MFA para configurar o autenticador (apenas no registro com MFA).
          example: "JBSWY3DPEHPK3PXP"
        email:
          type: string
          format: email
          description: Email do usuário (retornado quando requiresMfa é true).
          example: "admin@brasfi.com.br"

    PaginaDTO:
      type: object
      required:
        - titulo
        - slug
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        titulo:
          type: string
          minLength: 1
          example: "Sobre Nós"
        slug:
          type: string
          minLength: 1
          example: "sobre-nos"
        conteudo:
          type: string
          format: text
          example: "<p>Conteúdo da página sobre nós...</p>"

    Pagina:
      allOf:
        - $ref: '#/components/schemas/PaginaDTO'
        - type: object
          properties:
            dataCriacao:
              type: string
              format: date-time
              readOnly: true
            dataAtualizacao:
              type: string
              format: date-time
              readOnly: true

    InformacaoInstitucionalDTO:
      type: object
      required:
        - chave
        - valor
        - tipo
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        chave:
          type: string
          pattern: "^[a-zA-Z0-9_.-]+$"
          example: "missao_empresa"
        valor:
          type: string
          example: "Nossa missão é..."
        tipo:
          type: string
          example: "TEXTO"
        descricao:
          type: string
          nullable: true
          example: "Descrição da missão da empresa."
        ativo:
          type: boolean
          default: true

    InformacaoInstitucional:
      allOf:
        - $ref: '#/components/schemas/InformacaoInstitucionalDTO'
        - type: object
          properties:
            dataCriacao:
              type: string
              format: date-time
              readOnly: true
            dataAtualizacao:
              type: string
              format: date-time
              readOnly: true

    MensagemDTO:
      type: object
      required:
        - nome
        - email
        - assunto
        - mensagem
        - recaptchaToken
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        nome:
          type: string
          minLength: 3
          maxLength: 100
          example: "João Silva"
        email:
          type: string
          format: email
          example: "joao.silva@example.com"
        assunto:
          type: string
          minLength: 3
          maxLength: 200
          example: "Dúvida sobre produto X"
        mensagem:
          type: string
          minLength: 10
          example: "Gostaria de saber mais informações sobre..."
        lida:
          type: boolean
          readOnly: true
        respondida:
          type: boolean
          readOnly: true
        recaptchaToken:
          type: string
          description: "Token do reCAPTCHA v3."

    Mensagem:
      allOf:
        - $ref: '#/components/schemas/MensagemDTO'
        - type: object
          properties:
            resposta:
              type: string
              nullable: true
            usuarioRespostaId:
              type: integer
              format: int64
              nullable: true
            dataResposta:
              type: string
              format: date-time
              nullable: true
            dataCriacao:
              type: string
              format: date-time
              readOnly: true

    PageMensagem:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Mensagem'
        totalPages:
          type: integer
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
        number:
          type: integer
        # Adicione outras propriedades de paginação conforme necessário

    RespostaContatoDTO:
      type: object
      required:
        - resposta
      properties:
        resposta:
          type: string
          minLength: 10
          example: "Prezado(a), em resposta à sua dúvida..."

    AssinanteDTO:
      type: object
      required:
        - email
        - recaptchaToken
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        email:
          type: string
          format: email
          example: "visitante@example.com"
        nome:
          type: string
          nullable: true
          example: "Visitante Interessado"
        ativo:
          type: boolean
          readOnly: true
        recaptchaToken:
          type: string
          description: "Token do reCAPTCHA v3."

    Assinante:
      allOf:
        - $ref: '#/components/schemas/AssinanteDTO'
        - type: object
          properties:
            dataCadastro:
              type: string
              format: date-time
              readOnly: true
            dataDesativacao:
              type: string
              format: date-time
              nullable: true
              readOnly: true

    PageAssinante:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Assinante'
        totalPages:
          type: integer
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
        number:
          type: integer
        # Adicione outras propriedades de paginação

    NewsletterDTO:
      type: object
      required:
        - assunto
        - conteudo
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        assunto:
          type: string
          minLength: 3
          maxLength: 200
          example: "Novidades da BRASFI - Maio 2025"
        conteudo:
          type: string
          format: html
          example: "<h1>Confira nossas últimas notícias!</h1><p>...</p>"
        enviarImediatamente:
          type: boolean
          nullable: true
          description: "Se true, envia a newsletter imediatamente após a criação."

    Newsletter:
      allOf:
        - $ref: '#/components/schemas/NewsletterDTO'
        - type: object
          properties:
            enviada:
              type: boolean
              readOnly: true
            dataEnvio:
              type: string
              format: date-time
              nullable: true
              readOnly: true
            quantidadeDestinatarios:
              type: integer
              nullable: true
              readOnly: true
            usuarioId:
              type: integer
              format: int64
              readOnly: true
            dataCriacao:
              type: string
              format: date-time
              readOnly: true

    PageNewsletter:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Newsletter'
        totalPages:
          type: integer
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
        number:
          type: integer
        # Adicione outras propriedades de paginação

    MetricaImpactoDTO:
      type: object
      required:
        - titulo
        - valor
        - unidade
        - categoria
        - ano
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        titulo:
          type: string
          example: "Projetos Financiados"
        valor:
          type: number
          format: bigdecimal
          example: 150.75
        unidade:
          type: string
          example: "Milhões BRL"
        descricao:
          type: string
          nullable: true
          example: "Total de valor investido em projetos sustentáveis."
        categoria:
          type: string
          example: "Financeiro"
        ano:
          type: integer
          example: 2024
        tipoIniciativa:
          type: string
          nullable: true
          example: "Energia Renovável"
        icone:
          type: string
          nullable: true
          example: "icon-leaf"
        ordem:
          type: integer
          default: 0
        ativo:
          type: boolean
          default: true

    MetricaImpacto:
      allOf:
        - $ref: '#/components/schemas/MetricaImpactoDTO'
        - type: object
          properties:
            dataInclusao:
              type: string
              format: date-time
              readOnly: true
            dataAtualizacao:
              type: string
              format: date-time
              readOnly: true

    PageMetricaImpacto:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/MetricaImpacto'
        totalPages:
          type: integer
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
        number:
          type: integer
        # Adicione outras propriedades de paginação

    HistoricoMetrica:
      type: object
      properties:
        id:
          type: integer
          format: int64
        metrica:
          type: object
          properties:
            id:
              type: integer
              format: int64
            titulo:
              type: string
        valorAnterior:
          type: number
          format: bigdecimal
        valorNovo:
          type: number
          format: bigdecimal
        descricaoAlteracao:
          type: string
          nullable: true
        usuario:
          type: object
          properties:
            id:
              type: integer
              format: int64
            nome:
              type: string
        dataAlteracao:
          type: string
          format: date-time

    PageHistoricoMetrica:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/HistoricoMetrica'
        totalPages:
          type: integer
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
        number:
          type: integer
        # Adicione outras propriedades de paginação

    DepoimentoDTO:
      type: object
      required:
        - nome
        - cargo
        - organizacao
        - texto
        - ano
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        nome:
          type: string
          maxLength: 100
          example: "Maria Oliveira"
        cargo:
          type: string
          maxLength: 100
          example: "Diretora de Sustentabilidade"
        organizacao:
          type: string
          maxLength: 200
          example: "Empresa Verde Ltda."
        texto:
          type: string
          minLength: 50
          maxLength: 1000
          example: "A parceria com a BRASFI foi fundamental para..."
        fotoUrl:
          type: string
          format: url
          nullable: true
          example: "https://example.com/foto_maria.jpg"
        iniciativaRelacionada:
          type: string
          nullable: true
          example: "Projeto Solar Amazônia"
        ano:
          type: integer
          example: 2023
        ordem:
          type: integer
          default: 0
        destaque:
          type: boolean
          default: false
        ativo:
          type: boolean
          default: true

    Depoimento:
      allOf:
        - $ref: '#/components/schemas/DepoimentoDTO'
        - type: object
          properties:
            dataInclusao:
              type: string
              format: date-time
              readOnly: true
            dataAtualizacao:
              type: string
              format: date-time
              readOnly: true

    PageDepoimento:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Depoimento'
        totalPages:
          type: integer
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
        number:
          type: integer
        # Adicione outras propriedades de paginação

    NotificacaoDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        titulo:
          type: string
        mensagem:
          type: string
        tipo:
          type: string
          enum: [INFO, WARNING, ERROR]
        acao:
          type: string
          nullable: true
          description: "URL ou identificador de ação para o frontend."
        lida:
          type: boolean
        usuarioId:
          type: integer
          format: int64
        usuarioNome:
          type: string
        dataCriacao:
          type: string
          format: date-time
        dataLeitura:
          type: string
          format: date-time
          nullable: true

    PageNotificacaoDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/NotificacaoDTO'
        totalPages:
          type: integer
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
        number:
          type: integer
        # Adicione outras propriedades de paginação

    LogAuditoriaDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        usuarioId:
          type: integer
          format: int64
          nullable: true
        usuarioNome:
          type: string
          nullable: true
        acao:
          type: string
        entidade:
          type: string
        entidadeId:
          type: integer
          format: int64
          nullable: true
        detalhes:
          type: string
          nullable: true
        ip:
          type: string
        dataHora:
          type: string
          format: date-time

    PageLogAuditoriaDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/LogAuditoriaDTO'
        totalPages:
          type: integer
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
        number:
          type: integer
        # Adicione outras propriedades de paginação

    PublicacaoAgendadaDTO:
      type: object
      required:
        - tipoConteudo
        - dataPublicacao
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        tipoConteudo:
          type: string
          example: "PAGINA"
        conteudoId:
          type: integer
          format: int64
          nullable: true
          description: "ID do conteúdo existente a ser atualizado/publicado. Nulo para novo conteúdo."
        conteudoJson:
          type: string
          format: json
          description: "Conteúdo em formato JSON a ser publicado/atualizado."
          example: "{ \"titulo\": \"Nova Página Agendada\", \"slug\": \"nova-pagina-agendada\", \"conteudo\": \"<p>Conteúdo...</p>\" }"
        dataPublicacao:
          type: string
          format: date-time
          description: "Data e hora futuras para a publicação."

    PublicacaoAgendada:
      allOf:
        - $ref: '#/components/schemas/PublicacaoAgendadaDTO'
        - type: object
          properties:
            publicado:
              type: boolean
              readOnly: true
            usuario:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                nome:
                  type: string
              readOnly: true
            dataCriacao:
              type: string
              format: date-time
              readOnly: true
            dataAtualizacao:
              type: string
              format: date-time
              readOnly: true

    PagePublicacaoAgendada:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/PublicacaoAgendada'
        totalPages:
          type: integer
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
        number:
          type: integer
        # Adicione outras propriedades de paginação

    EventoAnalyticsDTO:
      type: object
      required:
        - tipo
        - categoria
      properties:
        tipo:
          type: string
          example: "PAGEVIEW"
        categoria:
          type: string
          example: "Pagina"
        acao:
          type: string
          nullable: true
          example: "Visualizacao"
        rotulo:
          type: string
          nullable: true
          example: "/sobre-nos"
        valor:
          type: integer
          nullable: true
          example: 1
        paginaReferencia:
          type: string
          format: url
          nullable: true
          example: "https://www.google.com/"
        paginaAtual:
          type: string
          format: url
          nullable: true
          example: "https://brasfi.com.br/sobre-nos"

    DadosAgrupadosDTO:
      type: object
      properties:
        chave:
          type: string
          example: "/pagina/contato"
        valor:
          type: integer
          format: int64
          example: 150

    EstatisticasDTO:
      type: object
      properties:
        paginasMaisVisitadas:
          type: array
          items:
            $ref: '#/components/schemas/DadosAgrupadosDTO'
        referenciasPopulares:
          type: array
          items:
            $ref: '#/components/schemas/DadosAgrupadosDTO'
        usuariosUnicos:
          type: integer
          format: int64
          example: 5320
        totalEventos:
          type: integer
          format: int64
          example: 100500
        periodoInicio:
          type: string
          format: date-time
        periodoFim:
          type: string
          format: date-time

    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
        error:
          type: string
        message:
          type: string
        path:
          type: string
        errors:
          type: object
          additionalProperties:
            type: string
          example:
            titulo: "O título é obrigatório"
            email: "Email deve ser válido"